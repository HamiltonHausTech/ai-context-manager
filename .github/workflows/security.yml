name: Security Audit

on:
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
      - 'demo_apps/requirements.txt'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit pip-audit

    - name: Install project dependencies
      run: |
        pip install -e .[all]
        pip install -r demo_apps/requirements.txt

    - name: Run pip-audit (comprehensive security check)
      run: |
        echo "Running pip-audit security scan..."
        pip-audit --desc --format=json --output=pip-audit-report.json || true
        pip-audit --desc || echo "pip-audit completed with findings"

    - name: Run Safety check
      run: |
        echo "Running Safety security scan..."
        safety check --json --output=safety-report.json || true
        safety check || echo "Safety check completed with findings"

    - name: Run Bandit security scan
      run: |
        echo "Running Bandit security scan..."
        bandit -r ai_context_manager/ -f json -o bandit-report.json || true
        bandit -r ai_context_manager/ || echo "Bandit scan completed with findings"

    - name: Check for known vulnerabilities
      run: |
        echo "Checking for known vulnerabilities..."
        
        # Check urllib3 version specifically
        pip show urllib3 | grep Version || echo "urllib3 not found"
        
        # Check for other common vulnerable packages
        echo "Checking common vulnerable packages..."
        pip list | grep -E "(urllib3|requests|cryptography|pyyaml)" || echo "No common vulnerable packages found"

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          pip-audit-report.json
          safety-report.json
          bandit-report.json
        retention-days: 30

    - name: Create security summary
      if: always()
      run: |
        echo "## Security Audit Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "pip-audit-report.json" ]; then
          echo "### pip-audit Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat pip-audit-report.json >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "safety-report.json" ]; then
          echo "### Safety Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat safety-report.json >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi

  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"

    - name: Check for outdated dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-review
        echo "Checking for outdated dependencies..."
        pip-review --local --auto || echo "No updates available"

    - name: Create dependency update issue
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = 'Security: Outdated Dependencies Detected';
          const body = `
          ## Security Alert: Outdated Dependencies
          
          The automated security audit detected outdated dependencies that may contain security vulnerabilities.
          
          **Action Required:**
          - Review the security audit results
          - Update vulnerable dependencies
          - Test the updated dependencies
          
          **Workflow:** [Security Audit](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          **Date:** ${new Date().toISOString()}
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'dependencies', 'automated']
          });
